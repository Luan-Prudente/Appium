name: Appium Android

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  teste-android:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Configurar JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'temurin'

    - name: Instalar Android SDK
      uses: android-actions/setup-android@v3
      with:
        android-sdk-root: C:\Android\android-sdk

    - name: Configurar PATH do Android
      run: |
        echo "C:\Android\android-sdk\emulator" >> $env:GITHUB_PATH
        echo "C:\Android\android-sdk\platform-tools" >> $env:GITHUB_PATH
        echo "C:\Android\android-sdk\tools\bin" >> $env:GITHUB_PATH

    - name: Instalar Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Instalar Appium
      run: |
        npm install -g appium@2.0
        npm install -g appium-doctor
        appium-doctor --android

    - name: Iniciar servidor Appium
      run: |
        appium --relaxed-security --log-level debug > appium.log 2>&1 &
        Start-Sleep -Seconds 15

    - name: Configurar Emulador Android
      run: |
        choco install -y haxm --force
        $licenseFiles = @(
            "android-sdk-license",
            "android-googletv-license",
            "intel-android-extra-license"
        )
        
        foreach ($license in $licenseFiles) {
            $licensePath = "$env:ANDROID_HOME\licenses\$license"
            if (-not (Test-Path $licensePath)) {
                New-Item -Path $licensePath -Force | Out-Null
                echo "8933bad161af4178b1185d1a37fbf41ea5269c55" | Out-File -FilePath $licensePath -Encoding ASCII
            }
        }
        
        sdkmanager "system-images;android-34;google_apis;x86_64" --verbose
        avdmanager create avd -n android_avd -k "system-images;android-34;google_apis;x86_64" -d pixel_4 -f
        $emulatorPath = "$env:ANDROID_HOME\emulator\emulator.exe"
        Start-Process -FilePath $emulatorPath -ArgumentList "-avd","android_avd","-no-window","-gpu","swiftshader_indirect","-no-snapshot","-noaudio","-no-boot-anim" -WindowStyle Hidden
        adb wait-for-device
        while (-not ((adb shell getprop sys.boot_completed) -eq "1")) {
          Start-Sleep -Seconds 5
          Write-Host "Aguardando inicialização do emulador..."
        }
        Write-Host "Emulador pronto!"

    - name: Executar testes
      run: |
        mvn clean test -Pandroid -Dappium.server.url=http://127.0.0.1:4723

    - name: Upload de relatórios
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: relatorios-teste
        path: |
          target/surefire-reports/
          target/screenshots/
          appium.log
