name: Appium Android

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    env:
      ANDROID_HOME: C:\Android\android-sdk
      PATH: ${{ env.ANDROID_HOME }}\cmd;${{ env.ANDROID_HOME }}\platform-tools;${{ env.PATH }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'temurin'

    - name: Set up Android SDK
      uses: android-actions/setup-android@v3

    - uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Appium
      run: |
        npm install -g appium@2.0
        npm install -g appium-doctor
        appium-doctor --android

    - name: Start Appium server
      run: |
        Start-Process -FilePath "appium" -ArgumentList "--relaxed-security","--log-timestamp","--local-timezone" -WindowStyle Hidden
        Start-Sleep -Seconds 10

    - name: Set up Android Emulator
      run: |
        choco install -y haxm --force
        sdkmanager --licenses || true
        sdkmanager "system-images;android-34;google_apis;x86_64"
        avdmanager create avd -n test_avd -k "system-images;android-34;google_apis;x86_64" -d "pixel_4" -f
        emulator -avd test_avd -no-window -gpu swiftshader_indirect &
        adb wait-for-device
        while (-not ((adb shell getprop sys.boot_completed) -eq "1")) {
          Start-Sleep -Seconds 5
          Write-Host "Waiting for device..."
        }

    - name: Run Tests
      run: |
        mvn clean test -Pandroid -Dappium.server.url=http://127.0.0.1:4723

    - name: Upload test reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-reports
        path: |
          target/surefire-reports/
          target/screenshots/
